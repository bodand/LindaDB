########################################################################################################################
#                                                                                                                      #
#                                                      LINUX                                                           #
#                                                                                                                      #
########################################################################################################################
# Linux CI is built for:
#  - x64/gcc/test
#  - x64/clang/test
#  - arm/gcc/test
#  - arm/clang/test

linux_test_template: &LINUX_TEST_TEMPLATE_TASK
  test_script:
    - cd ${BUILD_PATH}
    - ctest --output-on-failure

  coverage_script:
    - cd ${BUILD_PATH}
    - if [ "x${CG_TOOLCHAIN}" = "xclang" ]; then /usr/bin/env sh ../ci/gather-coverage.sh; fi

linux_builds_task:
  matrix:
    - name: "linux-gcc-x64"
      container:
        image: gcc:latest
      env:
        BUILD_ARCH: x64
        CMAKE_ARCH: x86_64
        CG_TOOLCHAIN: gcc
    - name: "linux-clang-x64"
      container:
        image: silkeh/clang:17
      env:
        BUILD_ARCH: x64
        CMAKE_ARCH: x86_64
        CG_TOOLCHAIN: clang
    - name: "linux-gcc-arm64"
      arm_container:
        image: gcc:latest
      env:
        BUILD_ARCH: arm
        CMAKE_ARCH: aarch64
        CG_TOOLCHAIN: gcc
        VCPKG_FORCE_SYSTEM_BINARIES: "1"
        VCPKG_MAX_CONCURRENCY: "6"
    - name: "linux-clang-arm64"
      arm_container:
        image: silkeh/clang:17
      env:
        BUILD_ARCH: arm
        CMAKE_ARCH: aarch64
        CG_TOOLCHAIN: clang
        VCPKG_FORCE_SYSTEM_BINARIES: "1"
        VCPKG_MAX_CONCURRENCY: "6"

  env:
    CIRRUS_CLONE_SUBMODULES: "true"
    VCPKG_DEFAULT_BINARY_CACHE: ${CIRRUS_WORKING_DIR}/vcpkg-bincache
    CMAKE_PRESET: lnx-${CG_TOOLCHAIN}-${BUILD_ARCH}-rel
    CMAKE_BUILD_PRESET: release-linux-${BUILD_ARCH}-${CG_TOOLCHAIN}
    BUILD_PATH: _build-release-${BUILD_ARCH}-${CG_TOOLCHAIN}
    CMAKE_TAR_URL: https://github.com/Kitware/CMake/releases/download/v3.27.8/cmake-3.27.8-linux-${CMAKE_ARCH}.tar.gz
    PATH: /tmp/cirrus-ci-build/cmake-3.27.8-linux-${CMAKE_ARCH}/bin:${PATH}
    PROJECT_CC_EXE: /usr/bin/cc
    PROJECT_CXX_EXE: /usr/bin/c++
    OMPI_ALLOW_RUN_AS_ROOT: "1"
    OMPI_ALLOW_RUN_AS_ROOT_CONFIRM: "1"

  apt_script:
    - apt-get update
    - apt-get install -y pkg-config curl ninja-build zip unzip git aria2 python3 rpm signify-openbsd jq asciidoctor
    - gem install coveralls-lcov

  cmake_install_script:
    - aria2c ${CMAKE_TAR_URL} -o cmake-install.tar.gz
    - tar xzf cmake-install.tar.gz

  symlink_compilers_script:
    - /usr/bin/env sh ci/symlinks.sh

  vcpkg_cache:
    folder: vcpkg-bincache
    reupload_on_changes: "false"
    fingerprint_script:
      - echo $BUILD_ARCH
      - echo $CIRRUS_OS
      - echo $CG_TOOLCHAIN
      - jq .dependencies vcpkg.json
    populate_script:
      - mkdir ${VCPKG_DEFAULT_BINARY_CACHE}
      - cmake --preset ${CMAKE_PRESET} -S.

  configure_script:
    - cmake --preset ${CMAKE_PRESET} -S.

  upload_caches:
    - vcpkg

  elevate_version_into_env_script:
    - echo PROJECT_VER=`cat ${BUILD_PATH}/versioninfo.txt` > ${CIRRUS_ENV}

  build_script:
    - cmake --build --preset ${CMAKE_BUILD_PRESET}

  <<: *LINUX_TEST_TEMPLATE_TASK

  on_failure:
    list_vcpkg_logs_script:
      - /usr/bin/env sh ci/gather_logs.sh

########################################################################################################################
#                                                                                                                      #
#                                                      WINDOWS                                                         #
#                                                                                                                      #
########################################################################################################################
# Windows CI is built for:
#  - x64/msvc/test
#  - x64/clang-cl/test

windows_test_template: &WINDOWS_TEST_TEMPLATE_TASK
  test_script:
    - cd %BUILD_PATH%
    - ctest

windows_builds_task:
  timeout_in: 120m
  windows_container:
    image: cirrusci/windowsservercore:2019
    cpu: 8
    memory: 32G

  dependencies_script:
    - choco install visualstudio2022buildtools -y --package-parameters "--add Microsoft.VisualStudio.Component.VC.Llvm.Clang --add Microsoft.VisualStudio.Component.VC.Llvm.ClangToolset --add Microsoft.VisualStudio.Component.VC.Tools.x86.x64 --add Microsoft.VisualStudio.Component.VC.Redist.14.Latest --add Microsoft.Component.VC.Runtime.UCRTSDK --add Microsoft.VisualStudio.Component.Windows10SDK --add Microsoft.VisualStudio.Component.Windows11SDK.22621 --add Microsoft.VisualStudio.Component.VC.ATL"
    - choco install vswhere -y
    - choco install jq -y
    - choco install ruby -y
    - choco install aria2 -y
    - choco install cmake -y
    - choco install ninja -y
    - gem install asciidoctor
    - gem install coveralls-lcov

  msmpi_script:
    - aria2c https://download.microsoft.com/download/7/2/7/72731ebb-b63c-4170-ade7-836966263a8f/msmpisetup.exe -o msmpisetup.exe
    - .\msmpisetup.exe -unattend -verbose

  matrix:
    - name: "windows-msvc-x64"
      env:
        CG_TOOLCHAIN: msvc
    - name: "windows-clang-x64"
      env:
        CG_TOOLCHAIN: clang

  env:
    CIRRUS_CLONE_SUBMODULES: "true"
    BUILD_ARCH: x64
    VCPKG_DEFAULT_BINARY_CACHE: "%CIRRUS_WORKING_DIR%\\vcpkg-bincache"
    CMAKE_PRESET: win-%CG_TOOLCHAIN%-%BUILD_ARCH%-rel
    CMAKE_BUILD_PRESET: release-windows-%BUILD_ARCH%-%CG_TOOLCHAIN%
    BUILD_PATH: _build-release-${BUILD_ARCH}-${CG_TOOLCHAIN}
    MS_VS_PATH: C:/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools
    PATH: C:\ProgramData\chocolatey\bin;C:\tools\ruby31\bin;C:\Program Files\CMake\bin;%PATH%

  longpath_script:
    - reg add "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\FileSystem" /v LongPathsEnabled /t REG_DWORD /d 1 /f

  vcpkg_cache:
    folder: vcpkg-bincache
    reupload_on_changes: "false"
    fingerprint_script:
      - echo:%BUILD_ARCH%
      - echo:%CIRRUS_OS%
      - echo:%CG_TOOLCHAIN%
      - jq .dependencies vcpkg.json
    populate_script:
      - ci\vs.bat
      - cmake -E make_directory %VCPKG_DEFAULT_BINARY_CACHE%
      - cmake --preset %CMAKE_PRESET% -S.

  configure_script:
    - ci\vs.bat
    - cmake --preset %CMAKE_PRESET% -S.

  upload_caches:
    - vcpkg

  elevate_version_into_env_script:
    - ci\version_env.bat

  build_script:
    - ci\vs.bat
    - cmake --build --preset %CMAKE_BUILD_PRESET%

  <<: *WINDOWS_TEST_TEMPLATE_TASK
